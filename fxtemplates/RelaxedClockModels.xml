
<beast version='2.0'
       namespace='beastfx.app.beauti:beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.branchratemodel:beast.base.evolution.speciation:beast.base.evolution.tree.coalescent:beast.base.util:beast.base.math:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood:beast.evolution:beast.base.inference.distribution'>


    <!-- Clock models -->
    <mergewith point='clockModelTemplates'>

        <!-- Relaxed clock exponential -->
        <subtemplate id='RelaxedClockExponential' class='beast.base.evolution.branchratemodel.UCRelaxedClockModel'
                     mainid='ExponentialRelaxedClock.c:$(n)'
                     suppressInputs='beast.base.evolution.branchratemodel.UCRelaxedClockModel.distr,beast.base.evolution.branchratemodel.UCRelaxedClockModel.rateQuantiles,beast.base.evolution.branchratemodel.UCRelaxedClockModel.rates'
                     hmc='ExponentialRelaxedClock/clock.rate/=StrictClock/clock.rate/,
                     ExponentialRelaxedClock/normalize/=/RelaxedClock/normalize/,
                     ExponentialRelaxedClock/numberOfDiscreteRates/=/RelaxedClock/numberOfDiscreteRates/,
                     UCMeanRatePrior/index/=Priors/ClockPrior/'>
                     >
            <![CDATA[
        <plugin spec='UCRelaxedClockModel' id="ExponentialRelaxedClock.c:$(n)" tree='@Tree.t:$(n)'>
			<parameter name='clock.rate' id='ucedMean.c:$(n)' value='1.0' lower="0.0" estimate='false'/>
            <distr id='Exponential.c:$(n)' name='distr' spec="beast.base.inference.distribution.Exponential">
				<parameter id='UCExpLambda.c:$(n)' name='mean' value='1.0'/>
			</distr>
            <rateCategories spec='parameter.IntegerParameter' id='expRateCategories.c:$(n)' value="1" dimension='10' estimate='true'/>
        </plugin>

        <operator id='ucedMeanScaler.c:$(n)' spec='ScaleOperator' scaleAll='false' scaleFactor="0.5" weight="1" parameter="@ucedMean.c:$(n)"/>
        <operator id="ExpCategoriesRandomWalk.c:$(n)" spec="IntRandomWalkOperator" windowSize='1' weight="10" parameter="@expRateCategories.c:$(n)"/>
		<operator id='ExpCategoriesSwapOperator.c:$(n)' spec='SwapOperator' howMany="1" weight="10" intparameter='@expRateCategories.c:$(n)'/>
		<operator id='ExpCategoriesUniform.c:$(n)' spec='UniformOperator' weight="10" parameter='@expRateCategories.c:$(n)'/>

		<upDownOperator id='relaxedUpDownOperatorExp.c:$(n)' spec='UpDownOperator' scaleFactor="0.75" weight="3">
			<up idref="ucedMean.c:$(n)"/>
			<down idref="Tree.t:$(n)"/>
		</upDownOperator>

		<log id='rateStat.c:$(n)' spec='beast.base.evolution.RateStatistic' tree='@Tree.t:$(n)' branchratemodel='@ExponentialRelaxedClock.c:$(n)'/>
      <prior id='UCMeanRatePrior.c:$(n)' x='@ucedMean.c:$(n)'>
                  <Gamma  name="distr">
                  	<alpha spec="parameter.RealParameter" value="0.01" estimate="false"/> 
                  	<beta  spec="parameter.RealParameter" value="100.0" estimate="false"/>
                  </Gamma>
      </prior>
]]>
            <connect srcID='ucedMean.c:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(ucedMean.c:$(n)) and ucedMean.c:$(n)/estimate=true'/>
            <connect srcID='expRateCategories.c:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(expRateCategories.c:$(n))'/>

            <connect srcID='UCMeanRatePrior.c:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(ucedMean.c:$(n)) and ucedMean.c:$(n)/estimate=true'>uncorrelated exponential
                relaxed clock mean of partition c:$(n)
            </connect>

            <connect srcID='ucedMeanScaler.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(ucedMean.c:$(n)) and ucedMean.c:$(n)/estimate=true'>Scale clock rate of partition
                c:$(n)
            </connect>
            <connect srcID='ExpCategoriesRandomWalk.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(expRateCategories.c:$(n)) and expRateCategories.c:$(n)/estimate=true'>Randomly change categories of partition c:$(n)
            </connect>
            <connect srcID='ExpCategoriesSwapOperator.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(expRateCategories.c:$(n)) and expRateCategories.c:$(n)/estimate=true'>Swap categories of partition c:$(n)
            </connect>
            <connect srcID='ExpCategoriesUniform.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(expRateCategories.c:$(n)) and expRateCategories.c:$(n)/estimate=true'>Uniformly draw categories of partition c:$(n)
            </connect>
            <connect srcID='relaxedUpDownOperatorExp.c:$(n)' targetID='mcmc' inputName='operator'
                     if='nooperator(FixMeanRatesOperator) and inlikelihood(ucedMean.c:$(n)) and inlikelihood(Tree.t:$(n)) and ucedMean.c:$(n)/estimate=true and Tree.t:$(n)/estimate=true'>
                Up/down scaler for mean rate and tree of partition c:$(n)
            </connect>
            <connect srcID='Tree.t:$(n)' targetID='ExponentialRelaxedClock.c:$(n)' inputName='tree' if='inlikelihood(ExponentialRelaxedClock.c:$(n))'/>
            <connect srcID='Tree.t:$(n)' targetID='rateStat.c:$(n)' inputName='tree' if='inlikelihood(ExponentialRelaxedClock.c:$(n))'/>

            <connect srcID='ucedMean.c:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(ucedMean.c:$(n)) and ucedMean.c:$(n)/estimate=true'/>
            <connect srcID='rateStat.c:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(ExponentialRelaxedClock.c:$(n))'/>

            <connect srcID='ExponentialRelaxedClock.c:$(n)' targetID='TreeWithMetaDataLogger.t:$(n)'
                     inputName='branchratemodel' if='inposterior(ExponentialRelaxedClock.c:$(n))'/>
        </subtemplate>


        <!-- Relaxed clock log normal -->
        <subtemplate id='RelaxedClockLogNormal' class='beast.base.evolution.branchratemodel.UCRelaxedClockModel'
                     mainid='RelaxedClock.c:$(n)'
                     suppressInputs='beast.base.evolution.branchratemodel.UCRelaxedClockModel.distr,beast.base.evolution.branchratemodel.UCRelaxedClockModel.rateQuantiles,beast.base.evolution.branchratemodel.UCRelaxedClockModel.rates'
                     hmc='RelaxedClock/clock.rate/=StrictClock/clock.rate/,
                     RelaxedClock/normalize/,
                     RelaxedClock/numberOfDiscreteRates/,
                     MeanRatePrior/index/=Priors/ClockPrior/'>
                     >
            <![CDATA[
        <plugin spec='UCRelaxedClockModel' id="RelaxedClock.c:$(n)" tree='@Tree.t:$(n)'>
			<parameter name='clock.rate' id='ucldMean.c:$(n)' lower="0.0" value='1.0'/>
            <distr id='LogNormalDistributionModel.c:$(n)' name='distr' spec="beast.base.inference.distribution.LogNormalDistributionModel" meanInRealSpace='true'>
                <parameter name='M' value="1.0" estimate='false' lower='0' upper='1'/>
                <parameter name='S' id='ucldStdev.c:$(n)' value="0.1" lower="0" estimate='true'/>
            </distr>
            <rateCategories spec='parameter.IntegerParameter' id='rateCategories.c:$(n)' value="1" dimension='10' estimate='true'/>
        </plugin>

        <operator id='ucldMeanScaler.c:$(n)' spec='ScaleOperator' scaleAll='false' scaleFactor="0.5" weight="1" parameter="@ucldMean.c:$(n)"/>
        <operator id='ucldStdevScaler.c:$(n)' spec='ScaleOperator' scaleAll='false' scaleFactor="0.5" weight="3" parameter="@ucldStdev.c:$(n)"/>
        <operator id="CategoriesRandomWalk.c:$(n)" spec="IntRandomWalkOperator" windowSize='1' weight="10" parameter="@rateCategories.c:$(n)"/>
		<operator id='CategoriesSwapOperator.c:$(n)' spec='SwapOperator' howMany="1" weight="10" intparameter='@rateCategories.c:$(n)'/>
		<operator id='CategoriesUniform.c:$(n)' spec='UniformOperator' weight="10" parameter='@rateCategories.c:$(n)'/>

		<upDownOperator id='relaxedUpDownOperator.c:$(n)' spec='UpDownOperator' scaleFactor="0.75" weight="3">
			<up idref="ucldMean.c:$(n)"/>
			<down idref="Tree.t:$(n)"/>
		</upDownOperator>

        <prior id='ucldStdevPrior.c:$(n)' x='@ucldStdev.c:$(n)'>

            <!-- this prior has a median of 0.1 and 97.5% of its probability is below S=1 -->
            <distr spec="beast.base.inference.distribution.Gamma">
                <parameter name='alpha' value="0.5396" estimate='false'/> <!-- shape -->
                <parameter name='beta' value="0.3819" estimate='false'/> <!-- scale -->
            </distr>

            <!-- <distr spec="beast.base.inference.distribution.Exponential">
                <parameter name='mean' value="0.3333" estimate='false'/>
            </distr> -->
        </prior>


		<log id='rate.c:$(n)' spec='beast.base.evolution.RateStatistic' tree='@Tree.t:$(n)' branchratemodel='@RelaxedClock.c:$(n)'/>
        <prior id='MeanRatePrior.c:$(n)' x='@ucldMean.c:$(n)'>
                  <Gamma  name="distr">
                  	<alpha spec="parameter.RealParameter" value="0.01" estimate="false"/> 
                  	<beta  spec="parameter.RealParameter" value="100.0" estimate="false"/>
                  </Gamma>
        </prior>
]]>
            <connect srcID='ucldMean.c:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(ucldMean.c:$(n)) and ucldMean.c:$(n)/estimate=true'/>
            <connect srcID='ucldStdev.c:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(ucldStdev.c:$(n)) and ucldStdev.c:$(n)/estimate=true'/>
            <connect srcID='rateCategories.c:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(rateCategories.c:$(n))'/>

            <connect srcID='ucldMeanScaler.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(ucldMean.c:$(n)) and ucldMean.c:$(n)/estimate=true'>Scale clock rate of partition
                c:$(n)
            </connect>
            <connect srcID='ucldStdevScaler.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(ucldStdev.c:$(n)) and ucldStdev.c:$(n)/estimate=true'>Scale stdev of rate of partition c:$(n)
            </connect>
            <connect srcID='CategoriesRandomWalk.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(rateCategories.c:$(n)) and rateCategories.c:$(n)/estimate=true'>Randomly change categories of partition c:$(n)
            </connect>
            <connect srcID='CategoriesSwapOperator.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(rateCategories.c:$(n)) and rateCategories.c:$(n)/estimate=true'>Swap categories of partition c:$(n)
            </connect>
            <connect srcID='CategoriesUniform.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(rateCategories.c:$(n)) and rateCategories.c:$(n)/estimate=true'>Uniformly draw categories of partition c:$(n)
            </connect>
            <connect srcID='relaxedUpDownOperator.c:$(n)' targetID='mcmc' inputName='operator'
                     if='nooperator(FixMeanRatesOperator) and inlikelihood(ucldMean.c:$(n)) and ucldMean.c:$(n)/estimate=true and Tree.t:$(n)/estimate=true'>
                Up/down scaler for mean rate and tree of partition c:$(n)
            </connect>
            <connect srcID='Tree.t:$(n)' targetID='RelaxedClock.c:$(n)' inputName='tree' if='inlikelihood(RelaxedClock.c:$(n))'/>
            <connect srcID='Tree.t:$(n)' targetID='rate.c:$(n)' inputName='tree' if='inlikelihood(RelaxedClock.c:$(n))'/>

            <connect srcID='ucldMean.c:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(ucldMean.c:$(n)) and ucldMean.c:$(n)/estimate=true'/>
            <connect srcID='ucldStdev.c:$(n)' targetID='tracelog' inputName='log' if='inlikelihood(ucldStdev.c:$(n))'/>
            <connect srcID='rate.c:$(n)' targetID='tracelog' inputName='log' if='inposterior(RelaxedClock.c:$(n))'/>

            <connect srcID='ucldStdevPrior.c:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(ucldStdev.c:$(n))'>uncorrelated lognormal relaxed clock stdev of partition c:$(n)
            </connect>
            <connect srcID='MeanRatePrior.c:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(ucldMean.c:$(n)) and inlikelihood(Tree.t:$(n)) and ucldMean.c:$(n)/estimate=true'>
                uncorrelated lognormal relaxed clock mean of partition c:$(n)
            </connect>

            <connect srcID='RelaxedClock.c:$(n)' targetID='TreeWithMetaDataLogger.t:$(n)' inputName='branchratemodel'
                     if='inposterior(RelaxedClock.c:$(n))'/>
        </subtemplate>



    </mergewith>

</beast>


